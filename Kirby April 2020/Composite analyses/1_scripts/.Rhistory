library(lubridate)
library(unmarked)
library(MuMIn)
library(jpeg)
library(ggplot2)
library(dplyr)
library(stringr)
library(nmixgof)
library(spdep)
library(rgdal)
library(tmap)
library(raster)
library(gstat) # Use gstat's idw routine
library(sp)    # Used for the spsample function
kirby <- raster("0_data/raw/Kirby_CWD_Vol.tif")
Kirby.coord<-read.csv("0_data/raw/Kirby.coord.csv")
LCC <- CRS("+proj=utm +zone=12 +ellps=GRS80 +units=m +no_defs")
coordinates(Kirby.coord) <- Kirby.coord[,c("EASTING", "NORTHING")]
proj4string(Kirby.coord) <- LCC
#https://www.rdocumentation.org/packages/MuMIn/versions/1.43.15/topics/pdredge
#a website link showing where someone else has calculated R-squared
#as a goodness-of-fit statistic for an N-mixture model
#other option would be nmixgof package that came out in 2018, which
#I think does not communicate with MuMIn
#so while I don't know exactly why R-squared isn't generally used
#for N-mixture models, it is available
my.theme <- theme_classic() +
theme(text=element_text(size=10, family="Arial"),
axis.text.x=element_text(size=10),
axis.text.y=element_text(size=10),
axis.title.x=element_text(margin=margin(10,0,0,0)),
axis.title.y=element_text(margin=margin(0,10,0,0)),
axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
my.theme2 <- theme_classic() +
theme(text=element_text(size=24, family="Arial"),
axis.text.x=element_text(size=24),
axis.text.y=element_text(size=24),
axis.title.x=element_text(margin=margin(10,0,0,0)),
axis.title.y=element_text(margin=margin(0,10,0,0)),
axis.line.x=element_line(linetype=1),
axis.line.y=element_line(linetype=1))
# Suppose we want to have set of models that exclude combinations of colinear
# variables, that are significantly (p < 0.05) correlated, with Pearson
# correlation coefficient equal to or larger than r = 0.7.
#https://github.com/cran/MuMIn/blob/master/demo/dredge.subset.R
is.correlated <- function(i, j, data, conf.level = .95, cutoff = .69, ...) {
if(j >= i) return(NA)
ct <- cor.test(data[, i], data[, j], conf.level = conf.level, ...)
ct$p.value > (1 - conf.level) || abs(ct$estimate) <= cutoff
}
# Need vectorized function to use with 'outer'
vCorrelated <- Vectorize(is.correlated, c("i", "j"))
Julian<-read.csv("0_data/processed/unmarked/Julian.csv",header=TRUE)
ObsCov<-list(as.matrix(Julian[,2:5]))
sitecov<-read.csv("0_data/processed/Kirby.alllayersandscales.csv",header=TRUE)
sitecov<-sitecov[,-1]
sitecov$Tremblingaspen_50<-sitecov$Tremblingaspen_50+sitecov$TremblingaspenMixCD_50+sitecov$TremblingaspenMixD_50+sitecov$TremblingaspenMixDC_50
sitecov$TremblingaspenMixCD_50<-NULL
sitecov$TremblingaspenMixD_50<-NULL
sitecov$TremblingaspenMixDC_50<-NULL
sitecov$Jackpine_50<-sitecov$Jackpine_50+sitecov$JackpineMixCD_50+sitecov$JackpineMixWet_50
sitecov$Jackpine_50JackpineMixCD_50<-NULL
sitecov$Jackpine_50JackpineMixWet_50<-NULL
sitecov$Tamarack_50<-sitecov$Tamarack_50+sitecov$TamarackMixCD_50+sitecov$TamarackMixDC_50
sitecov$TamarackMixCD_50<-NULL
sitecov$TamarackMixDC_50<-NULL
sitecov$Blackspruce_50<-sitecov$Blackspruce_50+sitecov$BlackspruceMixCD_50
sitecov$BlackspruceMixCD_50<-NULL
sitecov$Whitebirch_50<-sitecov$Whitebirch_50+sitecov$WhitebirchMixD_50
sitecov$WhitebirchMixD_50<-NULL
sitecov$Whitespruce_50<-sitecov$Whitespruce_50+sitecov$WhitespruceMixWet_50
sitecov$WhitespruceMixWet_50<-NULL
sitecov$Tremblingaspen_150<-sitecov$Tremblingaspen_150+sitecov$TremblingaspenMixCD_150+sitecov$TremblingaspenMixD_150+sitecov$TremblingaspenMixDC_150
sitecov$TremblingaspenMixCD_150<-NULL
sitecov$TremblingaspenMixD_150<-NULL
sitecov$TremblingaspenMixDC_150<-NULL
sitecov$Jackpine_150<-sitecov$Jackpine_150+sitecov$JackpineMixCD_150+sitecov$JackpineMixWet_150
sitecov$Jackpine_150JackpineMixCD_150<-NULL
sitecov$Jackpine_150JackpineMixWet_150<-NULL
sitecov$Tamarack_150<-sitecov$Tamarack_150+sitecov$TamarackMixCD_150+sitecov$TamarackMixDC_150
sitecov$TamarackMixCD_150<-NULL
sitecov$TamarackMixDC_150<-NULL
sitecov$Blackspruce_150<-sitecov$Blackspruce_150+sitecov$BlackspruceMixCD_150+sitecov$BlackspruceMixDC_150
sitecov$BlackspruceMixCD_150<-NULL
sitecov$BlackspruceMixDC_150<-NULL
sitecov$Whitebirch_150<-sitecov$Whitebirch_150+sitecov$WhitebirchMixD_150+sitecov$WhitebirchMixDC_150
sitecov$WhitebirchMixD_150<-NULL
sitecov$WhitebirchMixDC_150<-NULL
sitecov$Whitespruce_150<-sitecov$Whitespruce_150+sitecov$WhitespruceMixWet_150+sitecov$WhitespruceMixC_150+sitecov$WhitespruceMixCD_150
sitecov$WhitespruceMixWet_150<-NULL
sitecov$WhitespruceMixC_150<-NULL
sitecov$WhitespruceMixCD_150<-NULL
sitecov$Tremblingaspen_500<-sitecov$Tremblingaspen_500+sitecov$TremblingaspenMixCD_500+sitecov$TremblingaspenMixD_500+sitecov$TremblingaspenMixDC_500
sitecov$TremblingaspenMixCD_500<-NULL
sitecov$TremblingaspenMixD_500<-NULL
sitecov$TremblingaspenMixDC_500<-NULL
sitecov$Jackpine_500<-sitecov$Jackpine_500+sitecov$JackpineMixCD_500+sitecov$JackpineMixWet_500#+sitecov$Jackpine_500JackpineMixC_500
#sitecov$Jackpine_500JackpineMixC_500<-NULL
sitecov$Jackpine_500JackpineMixCD_500<-NULL
sitecov$Jackpine_500JackpineMixWet_500<-NULL
sitecov$Tamarack_500<-sitecov$Tamarack_500+sitecov$TamarackMixCD_500+sitecov$TamarackMixDC_500
sitecov$TamarackMixCD_500<-NULL
sitecov$TamarackMixDC_500<-NULL
sitecov$Blackspruce_500<-sitecov$Blackspruce_500+sitecov$BlackspruceMixCD_500+sitecov$BlackspruceMixDC_500
sitecov$BlackspruceMixCD_500<-NULL
sitecov$BlackspruceMixDC_500<-NULL
sitecov$Whitebirch_500<-sitecov$Whitebirch_500+sitecov$WhitebirchMixD_500+sitecov$WhitebirchMixDC_500
sitecov$WhitebirchMixD_500<-NULL
sitecov$WhitebirchMixDC_500<-NULL
sitecov$Whitespruce_500<-sitecov$Whitespruce_500+sitecov$WhitespruceMixWet_500+sitecov$WhitespruceMixC_500+sitecov$WhitespruceMixCD_500
sitecov$WhitespruceMixWet_500<-NULL
sitecov$WhitespruceMixC_500<-NULL
sitecov$WhitespruceMixCD_500<-NULL
sitecov$EASTING<-NULL
ALFL.AVI<-read.csv("/Users/llest/OneDrive/Documents/BERA Mentoring/Kirby April 2020/AVI analyses/0_data/processed/unmarked/results/ALFLbestmodels500.csv",header=TRUE)
AIC.ALFL.AVI<-round(ALFL.AVI$AIC[1],2)
AIC.ALFL.AVI
ALFL.Beaudoin<-read.csv("/Users/llest/OneDrive/Documents/BERA Mentoring/Kirby April 2020/Beaudoin analyses/0_data/processed/unmarked/results/ALFLbestmodels150.csv",header=TRUE)
AIC.ALFL.Beaudoin<-round(ALFL.Beaudoin$AIC[1],2)
AIC.ALFL.Beaudoin
ALFL.Lidar<-read.csv("/Users/llest/OneDrive/Documents/BERA Mentoring/Kirby April 2020/Lidar analyses/0_data/processed/unmarked/results/ALFLbestmodels150.csv",header=TRUE)
AIC.ALFL.Lidar<-round(ALFL.Lidar$AIC[1],2)
AIC.ALFL.Lidar
ALFL.Composite<-read.csv("/Users/llest/OneDrive/Documents/BERA Mentoring/Kirby April 2020/Composite analyses/0_data/processed/unmarked/results/ALFLbestmodels150.csv",header=TRUE)
AIC.ALFL.Composite<-round(ALFL.Composite$AIC[1],2)
ALFL.Composite<-read.csv("/Users/llest/OneDrive/Documents/BERA Mentoring/Kirby April 2020/Composite analyses/0_data/processed/unmarked/results/ALFLbestmodels.csv",header=TRUE)
AIC.ALFL.Composite<-round(ALFL.Composite$AIC[1],2)
AIC.ALFL.Composite
